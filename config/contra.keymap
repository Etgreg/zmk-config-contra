/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT  0
#define NUM_MODS 1
#define BT_CTRL  2

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W                          &kp E         &kp R                              &kp T  &kp ESCAPE      &kp BACKSPACE          &kp Y        &kp U                            &kp I      &kp O       &kp P
&kp A             &kp S                          &kp D         &kp F                              &kp G  &kp TAB         &mo 3                  &kp H        &kp J                            &kp K      &kp L       &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X                          &kp C         &kp V                              &kp B  &kp LEFT_SHIFT  &kp DEL                &kp N        &kp M                            &kp COMMA  &kp PERIOD  &kp SLASH
&kp GRAVE         &mt LEFT_ALT LEFT_PARENTHESIS  &kp LEFT_WIN  &mt LEFT_CONTROL LEFT_PARENTHESIS  &mo 1  &kp SPACE       &mt RIGHT_SHIFT ENTER  &lt 2 ENTER  &mt RIGHT_ALT RIGHT_PARENTHESIS  &kp MINUS  &kp EQUAL   &kp APOS
            >;
        };

        num_mods {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5  &kp ESCAPE  &kp BACKSPACE  &kp NUMBER_6      &kp N7             &kp N8             &kp N9                &kp N0
&trans        &kp LS(NUMBER_3)  &kp TILDE     &kp RA(GRAVE)  &trans        &trans      &trans         &kp LS(NUMBER_3)  &kp TILDE          &kp RA(GRAVE)      &kp RA(SINGLE_QUOTE)  &kp RA(BACKSLASH)
&trans        &trans            &trans        &trans         &trans        &trans      &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LS(BACKSLASH)  &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)
&trans        &trans            &trans        &trans         &trans        &trans      &trans         &trans            &kp BACKSLASH      &kp LS(BACKSLASH)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &kp PRINTSCREEN  &trans  &trans  &trans  &trans  &kp HOME  &trans    &kp UP_ARROW  &trans     &trans
&trans  &trans  &trans           &trans  &trans  &trans  &trans  &kp END   &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans    &trans    &trans        &trans     &trans
&trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans    &trans    &trans        &trans     &trans
            >;
        };

        function {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&bt BT_CLR    &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
            >;
        };
    };
};
